#Importe a base de dados chamada Titanic.csv e responda às seguintes perguntas:
#1. Qual era a faixa etária dos passageiros desse navio?
#2. Qual era a condição econômica desses passageiros?
#3. Qual o percentual de passageiros que sobreviveram?
#4. Qual a quantidade de pessoas do sexo masculino e feminino que estavam a bordo?
#Qual a conclusão acerca dos passageiros do navio?

#importar bibliotecas
import pandas as pd   #responsavel pela estrutura
import numpy as np    #responsavel pela operação matemática

#importar a base de dados
# para isso, guardar em uma variável
titanic = 'C:\\Users\\36134552025.1\\UC_02\\bases\\titanic.csv'

#transformar em um dataframe
titanic_df = pd.read_csv(titanic, sep=';', encoding='iso-8859-1')

#especificando colunas que quero do dataframe, pra ficar mais eficiente
titanic_df = titanic_df[['Name', 'Sex', 'Age', 'Survived', 'Pclass', 'Fare']]

#------------- Qual era a faixa etária dos passageiros desse navio?---------
# pode-se calcular: media / mediana do total e também agrupando de varias formas (genero, classe e etc)
# média geral
media_idade = np.mean(titanic_df['Age'])
mediana_idade = np.median(titanic_df['Age'])
dif_idade = abs((media_idade/mediana_idade)-1)*100

#média por genero, usar groupby do pandas
media_idade_genero = titanic_df.groupby('Sex')['Age'].mean()
mediana_idade_genero = titanic_df.groupby('Sex')['Age'].median()
dif_idade_genero = abs((media_idade_genero/mediana_idade_genero)-1)*100

#média por classe economica, usar groupby do pandas
media_idade_classe = titanic_df.groupby('Pclass')['Age'].mean()
mediana_idade_classe = titanic_df.groupby('Pclass')['Age'].median()
dif_idade_classe = abs((media_idade_classe/mediana_idade_classe)-1)*100

#-------------Qual era a condição econômica desses passageiros?--------------
# calcular a média e a mediana geral das tarifas (fares)
media_fare = np.mean(titanic_df['Fare'])
mediana_fare = np.median(titanic_df['Fare'])
dif_fare = abs((media_fare/mediana_fare)-1)

#media por classe economica
media_fare_classe = titanic_df.groupby('Pclass')['Fare'].mean()
mediana_fare_classe = titanic_df.groupby('Pclass')['Fare'].median()
dif_fare_classe = abs((media_fare_classe/mediana_fare_classe)-1)

#--------------Qual o percentual de passageiros que sobreviveram?-------
sobreviveram = np.count_nonzero(titanic_df['Survived'] == 1)
nao_sobreviveram = np.count_nonzero(titanic_df['Survived'] == 0)
taxa_sobrevivencia = sobreviveram/(sobreviveram + nao_sobreviveram)*100

#calcular por classe
#pra isso, criar um dataframe dos que sobreviveram
titanic_df_sobreviveram = titanic_df[titanic_df['Survived'] == 1]
sobreviveram_classe = titanic_df_sobreviveram.groupby('Pclass')['Name'].count()
titanic_df_nao_sobreviveram = titanic_df[titanic_df['Survived'] == 0]
nao_sobreviveram_classe = titanic_df_nao_sobreviveram.groupby('Pclass')['Name'].count()
taxa_sobrevivencia_classe = sobreviveram_classe/(sobreviveram_classe + nao_sobreviveram_classe)*100

#-------------Qual a quantidade de pessoas do sexo masculino e feminino que estavam a bordo?--------------------
feminino = np.count_nonzero(titanic_df['Sex'] == 'female')
masculino = np.count_nonzero(titanic_df['Sex'] == 'male')

#calculando os quartes da passagem e da idade
q1_idade = np.quantile(titanic_df['Age'],0.25, method='weibull')
q2_idade = np.quantile(titanic_df['Age'],0.50, method='weibull')
q3_idade = np.quantile(titanic_df['Age'],0.75, method='weibull')
iqr_idade = q3_idade - q1_idade
q1_fare = np.quantile(titanic_df['Fare'],0.25, method='weibull')
q2_fare = np.quantile(titanic_df['Fare'],0.50, method='weibull')
q3_fare = np.quantile(titanic_df['Fare'],0.75, method='weibull')
iqr_fare = q3_fare - q1_fare

#identificando os valores discrepantes (outliers)
limite_superior_idade = q3_idade + (1.5*iqr_idade)
limite_inferior_idade = q1_idade - (1.5*iqr_idade)
limite_superior_fare = q3_fare + (1.5*iqr_fare)
limite_inferior_fare = q1_fare - (1.5*iqr_fare)

##filtrando o dataframe dos valores discrepantes
df_outliers_idade_inferiores = titanic_df[titanic_df['Age'] < limite_inferior_idade]
df_outliers_idade_superiores = titanic_df[titanic_df['Age'] > limite_superior_idade]
df_outliers_fare_inferiores = titanic_df[titanic_df['Fare'] < limite_inferior_fare]
df_outliers_fare_superiores = titanic_df[titanic_df['Fare'] > limite_superior_fare]


#saída dos dados:

print(f'Em relação a idade:--------------------------------------')
print(f'A média geral é {media_idade:.0f} anos, enquanto a mediana é {mediana_idade:.0f} anos, sendo a diferença entre a média e mediana de{dif_idade:.0f}%')
print(f'A média por gênero é \n {media_idade_genero.to_string(index=True, header=False)} anos, \n enquanto a mediana é \n {mediana_idade_genero.to_string(index=True, header=False)} anos, \n sendo a diferença percentual entre a média e mediana de \n {dif_idade_genero.to_string(index=True, header=False)}')
print(f'A média por classe é \n {media_idade_classe.to_string(index=True, header=False)} anos, \n enquanto a mediana é \n {mediana_idade_classe.to_string(index=True, header=False)} anos, \n sendo a diferença percentual entre a média e mediana de \n {dif_idade_classe.to_string(index=True, header=False)}')
print(f'O valor do 1Q da idade é: \n {q1_idade}')
print(f'O valor do 2Q da idade é: \n {q2_idade}')
print(f'O valor do 3Q da idade é: \n {q3_idade}')
print(f'O IQR é: \n {iqr_idade}')
print(f'O limite inferior é: \n {limite_inferior_idade}')
print(f'O limite superior é: \n {limite_superior_idade}')

if len(df_outliers_idade_inferiores) == 0:
    print('Não existem outliers inferiores')
else:    
    print(f' outliers superiores: {df_outliers_idade_inferiores}')

if len(df_outliers_idade_superiores) == 0:
    print('Não existem outliers superiores')
else:    
    print(f' outliers superiores: {df_outliers_idade_superiores}')


print(f' \n Em relação a condição economica:--------------------------------------')
print(f'A média geral da passagem é {media_fare:.0f}, enquanto a mediana é {mediana_fare:.0f}, sendo a diferença entre a média e mediana de{dif_fare:.0f}%')
print(f'A média da passagem por classe é \n {media_fare_classe.to_string(index=True, header=False)}, \n enquanto a mediana é \n {mediana_fare_classe.to_string(index=True, header=False)}, \n sendo a diferença percentual entre a média e mediana de \n {dif_fare_classe.to_string(index=True, header=False)}')
print(f'O valor do 1Q da passagem é: \n {q1_idade}')
print(f'O valor do 2Q da passagem é: \n {q2_idade}')
print(f'O valor do 3Q da passagem é: \n {q3_idade}')
print(f'O IQR é: \n {iqr_fare}')
print(f'O limite inferior é: \n {limite_inferior_fare}')
print(f'O limite superior é: \n {limite_superior_fare}')
if len(df_outliers_fare_inferiores) == 0:
    print('Não existem outliers inferiores')
else:    
    print(f' outliers superiores: {df_outliers_fare_inferiores}')

if len(df_outliers_fare_superiores) == 0:
    print('Não existem outliers superiores')
else:    
    print(f' outliers superiores: {df_outliers_fare_superiores}')


print(f' \n ---------------Sobrevivência---------------------')
print(f'{taxa_sobrevivencia} dos passageiros sobreviveram')
print(f'Analisando por classe, a taxa de sobrevivencia é:\n{taxa_sobrevivencia_classe} ')


print(f'\n -----------------------Divisão por gênero-----------------------------')
print(f'Tinha {feminino} passageiros do sexo feminino e {masculino} passageiros do sexo masculino')

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
###### RESOLUÇÃO DO PROFESSOR -> ELE CRIA ARRAYS A PARTIR DAS DATAFRAMES PRA FACILITAR:

import pandas as pd
import numpy as np

print('---- OBTENDO DADOS ----')

# Importando a base de dados financeira.csv
endereco_dados = 'BASES\Titanic.csv'

# Criando o DataFrame financeira
df_titanic = pd.read_csv(endereco_dados,sep=';',encoding='iso-8859-1')
df_titanic = df_titanic[['Name','Sex','Age','Fare','Survived']]

# Exibindo a base de dados financeira
print('\n---- EXIBINDO A BASE DE DADOS -----')
print(df_titanic)

# Criando o array do valor da passagem e da idade
array_titanic_fare = np.array(df_titanic["Fare"])
array_titanic_age = np.array(df_titanic["Age"])
array_titanic_survived = np.array(df_titanic["Survived"])

# Obtendo a média do valor da passagem e da idade
media_fare = np.mean(array_titanic_fare)
media_age = np.mean(array_titanic_age)

# Obtendo a mediana do valor da passagem e da idade
mediana_fare = np.median(array_titanic_fare)
mediana_age = np.median(array_titanic_age)

# Obtendo a distância entre a média e a mediana do valor da passagem e da idade
distancia_fare = abs((media_fare - mediana_fare) / mediana_fare)
distancia_age = abs((media_age - mediana_age) / mediana_age)

# Obtendo o máximo e o mínimo do valor da passagem e da idade
maximo_fare = np.max(array_titanic_fare)
maximo_age = np.max(array_titanic_age)
minimo_fare = np.min(array_titanic_fare)
minimo_age = np.min(array_titanic_age)

# Obtendo a amplitude do valor da passagem e da idade
amplitude_fare = maximo_fare - minimo_fare
amplitude_age = maximo_age - minimo_age

# Obtendo a quantidade de sobreviventes
qtd_passageiros = df_titanic['Survived'].count()
qtd_sobreviventes = df_titanic[df_titanic['Survived'] == 1].count()
percentual_sobreviventes = (qtd_sobreviventes / qtd_passageiros) * 100
df_titanic_survived = df_titanic[df_titanic['Survived'] == 1]

# Obtendo a quantidade total de homens e mulheres
qtd_masc = df_titanic[df_titanic['Sex'] == 'male'].count()
qtd_fem = df_titanic[df_titanic['Sex'] == 'female'].count()

# Obtendo a quantidade de homens e mulheres que sobreviveram
qtd_masc_sobre = df_titanic_survived[df_titanic_survived['Sex'] == 'male'].count()
qtd_fem_sobre = df_titanic_survived[df_titanic_survived['Sex'] == 'female'].count()


# Exibindo os dados sobre as idades dos passageiros
print("\n-- OBTENDO INFORMAÇÕES SOBRE AS IDADES --")
print('Medidas de Tendência Central')
print(f"\nA média das idades é {media_age:.1f}")
print(f"A mediana das idades é {mediana_age:.1f}")
print(f"A distância entre a média e a mediana é {distancia_age}")
print(f"O menor valor das idades é {minimo_age}")
print(f"O maior valor das idades é {maximo_age}")
print(f"A amplitude dos valores das idades é {amplitude_age}")


# Exibindo os dados sobre o valor das passagens
print("\n-- OBTENDO INFORMAÇÕES SOBRE AS PASSAGENS --")
print('Medidas de Tendência Central')
print(f"\nA média das passagens é {media_fare:.2f}")
print(f"A mediana das passagens é {mediana_fare:.2f}")
print(f"A distância entre a média e a mediana é {distancia_fare}")
print(f"O menor valor das passagens é {minimo_fare:.2f}")
print(f"O maior valor das passagens é {maximo_fare:.2f}")
print(f"A amplitude dos valores das passagens é {amplitude_fare:.2f}")


# Exibindo os dados sobre os sobreviventes
print("\n-- OBTENDO INFORMAÇÕES SOBRE OS SOBREVIVENTES --")
print(f"A quantidade de passageiros foi {qtd_passageiros}")
print(f"A quantidade de sobreviventes foi {qtd_sobreviventes.values[0]}")
print(f"O percentual de sobreviventes foi {percentual_sobreviventes.values[0]:.2f} %")
print(f"A quantidade de homens sobreviventes foi {qtd_masc_sobre.values[0]}")
print(f"A quantidade de mulheres sobreviventes foi {qtd_fem_sobre.values[0]}")


# Exibindo os dados sobre os passageiros
print("\n-- OBTENDO INFORMAÇÕES SOBRE OS PASSAGEIROS --")
print(f"A quantidade total de homens é {qtd_masc.values[0]}")
print(f"A quantidade total de mulheres é {qtd_fem.values[0]}")

